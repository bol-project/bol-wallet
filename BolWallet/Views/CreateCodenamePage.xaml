<ContentPage
    x:Class="BolWallet.Views.CreateCodenamePage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:controls1="clr-namespace:BolWallet.Controls"
    xmlns:converters="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:localConverters="clr-namespace:BolWallet.Converters"
    xmlns:models="clr-namespace:BolWallet.Models"
    xmlns:viewModels="clr-namespace:BolWallet.ViewModels"
    x:Name="This"
    Title="Create your CodeName"
    x:DataType="viewModels:CreateCodenameViewModel"
    BackgroundColor="{DynamicResource SecondaryColor}">
    <ContentPage.Resources>
        <StyleSheet>
            <![CDATA[
            .border-style {
                background-color: lightgray;
            }
            ]]>
        </StyleSheet>
        <ResourceDictionary>

            <DataTemplate x:Key="CountrySelectedItemTemplate" x:DataType="models:Country">
                <Label
                    FontSize="18"
                    Text="{Binding Name}"
                    TextColor="Black"
                    VerticalOptions="Center"
                    VerticalTextAlignment="Center" />
            </DataTemplate>

            <DataTemplate x:Key="CountryListItemTemplate" x:DataType="models:Country">
                <Label
                    Padding="8"
                    FontSize="18"
                    Text="{Binding Name}"
                    TextColor="Black"
                    VerticalOptions="Center"
                    VerticalTextAlignment="Center" />
            </DataTemplate>

            <converters:VariableMultiValueConverter x:Key="AllTrueConverter" ConditionType="All" />
            <converters:IsNotNullConverter x:Key="IsNotNullConverter" />
            <converters:IsNullConverter x:Key="IsNullConverter" />
            <converters:InvertedBoolConverter x:Key="InvertedBoolConverter" />

            <localConverters:StateColorConverter x:Key="EndIconColorConverter" />

            <Style TargetType="controls1:ExtendedTextEdit">
                <Setter Property="ClearIconVisibility" Value="Never" /> 
                <Setter Property="HorizontalOptions" Value="Fill" />
                <Setter Property="IsErrorIconVisible" Value="False" />
                <Setter Property="BoxHeight" Value="56" />
                <Setter Property="FontSize" Value="18" />
            </Style>
            
            <Color x:Key="FocusedColor">#718792</Color>

        </ResourceDictionary>
    </ContentPage.Resources>
    <ScrollView>
        <StackLayout Margin="5">

            <Grid
                Margin="8"
                ColumnSpacing="8"
                HorizontalOptions="Fill">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <controls1:ExtendedTextEdit 
                    x:Name="FirstName"
                    Grid.Column="0"
                    ErrorText="{Binding CodenameForm.FirstName.ErrorMessage}"
                    HasError="{Binding CodenameForm.FirstName.HasError}"
                    LabelText="First Name*"
                    State="{Binding CodenameForm.FirstName.State}"
                    Text="{Binding CodenameForm.FirstName.Value, Mode=TwoWay}" 
                    TextTransform="Uppercase"
                />
                
                <controls1:ExtendedTextEdit
                    Grid.Column="1"
                    ErrorText="{Binding CodenameForm.Surname.ErrorMessage}"
                    HasError="{Binding CodenameForm.Surname.HasError}"
                    LabelText="Surname*"
                    State="{Binding CodenameForm.Surname.State}"
                    Text="{Binding CodenameForm.Surname.Value, Mode=TwoWay}" 
                    TextTransform="Uppercase"/>
                
            </Grid>

            <Grid
                Margin="8"
                ColumnSpacing="8"
                HorizontalOptions="Fill">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <controls1:ExtendedTextEdit
                    Grid.Column="0"
                    ErrorText="{Binding CodenameForm.MiddleName.ErrorMessage}"
                    HasError="{Binding CodenameForm.MiddleName.HasError}"
                    LabelText="Middle Name"
                    State="{Binding CodenameForm.MiddleName.State}"
                    Text="{Binding CodenameForm.MiddleName.Value, Mode=TwoWay}" 
                    TextTransform="Uppercase"/>

                <controls1:ExtendedTextEdit
                    Grid.Column="1"
                    ErrorText="{Binding CodenameForm.ThirdName.ErrorMessage}"
                    HasError="{Binding CodenameForm.ThirdName.HasError}"
                    LabelText="Third Name"
                    State="{Binding CodenameForm.ThirdName.State}"
                    Text="{Binding CodenameForm.ThirdName.Value, Mode=TwoWay}" 
                    TextTransform="Uppercase"/>

            </Grid>
            <controls1:ExtendedComboBox x:Name="GenderSelection"
                Margin="8,4"
                SelectedItem="{Binding CodenameForm.Gender, Mode=TwoWay}" 
                FocusedBorderColor="{StaticResource FocusedColor}"
                FocusedLabelColor="{StaticResource FocusedColor}"
                LabelText="Gender*"/>

            <!-- ToDo
            ClearIconVisibility="Never"
            IsErrorIconVisible="False"
            ItemTemplate="{StaticResource CountryListItemTemplate}"
            SelectedItemTemplate="{StaticResource CountrySelectedItemTemplate}"
            -->
            <controls1:ExtendedComboBox 
                Margin="8,4"
                FocusedBorderColor="{StaticResource FocusedColor}"
                FocusedLabelColor="{StaticResource FocusedColor}"
                ItemsSource="{Binding CodenameForm.Countries, Mode=TwoWay}"
                ItemText="Name"
                LabelText="Country*"
                SelectedItem="{Binding CodenameForm.SelectedCountry, Mode=TwoWay}"
                 />
<!-- ToDo
 ClearIconVisibility="Never"           
 IsEndIconVisible="{Binding CodenameForm.Birthdate.IsReady}"
                IsErrorIconVisible="False"           -->
            <controls1:ExtendedDatePicker x:Name="dBirthdate"
                Margin="8,4"
                Format="dd-MM-yyyy"
                Date="{Binding CodenameForm.Birthdate.Value, Mode=TwoWay}"
                EndIconColor="{Binding CodenameForm.Birthdate.State, Converter={StaticResource EndIconColorConverter}}"
                ErrorText="{Binding CodenameForm.Birthdate.ErrorMessage}"
                FocusedBorderColor="{Binding CodenameForm.Birthdate.State, Converter={StaticResource EndIconColorConverter}}"
                FocusedLabelColor="{Binding CodenameForm.Birthdate.State, Converter={StaticResource EndIconColorConverter}}"
                HasError="{Binding CodenameForm.Birthdate.HasError}"
                State="{Binding CodenameForm.Birthdate.State}"
                
                LabelText="Birthdate*" >
                
            </controls1:ExtendedDatePicker>
            
            <controls1:ExtendedTextEdit
                Margin="8,4"
                ErrorText="{Binding CodenameForm.NIN.ErrorMessage}"
                HasError="{Binding CodenameForm.NIN.HasError}"
                HelpText="{Binding CodenameForm.NIN.HelpMessage}"
                LabelText="NIN*"
				IsReadOnly="{Binding CodenameForm.NIN.IsEnabled}"
                State="{Binding CodenameForm.NIN.State}"
                Text="{Binding CodenameForm.NIN.Value, Mode=TwoWay}" />

            <controls1:ExtendedTextEdit
                Margin="8,4"
                ErrorText="{Binding CodenameForm.Combination.ErrorMessage}"
                HasError="{Binding CodenameForm.Combination.HasError}"
                LabelText="Combination*"
                State="{Binding CodenameForm.Combination.State}"
                Text="{Binding CodenameForm.Combination.Value, Mode=TwoWay}" />
            <Button Margin="8,4"
                Command="{Binding SubmitCommand}"
                Text="Submit">
                <Button.IsEnabled>
                    <MultiBinding Converter="{StaticResource AllTrueConverter}">
                        <Binding
                            Mode="OneWay"
                            Path="CodenameForm.IsFormFilled" />
                        <Binding
                            Converter="{StaticResource InvertedBoolConverter}"
                            Mode="OneWay"
                            Path="CodenameForm.IsInvalidated" />
                        <Binding
                            Converter="{StaticResource IsNotNullConverter}"
                            Mode="OneWay"
                            Path="Codename" />
                    </MultiBinding>
                </Button.IsEnabled>
                <Button.IsVisible>
                    <MultiBinding Converter="{StaticResource AllTrueConverter}">
                        <Binding
                            Mode="OneWay"
                            Path="CodenameForm.IsFormFilled" />
                        <Binding
                            Converter="{StaticResource InvertedBoolConverter}"
                            Mode="OneWay"
                            Path="CodenameForm.IsInvalidated" />
                        <Binding
                            Converter="{StaticResource IsNotNullConverter}"
                            Mode="OneWay"
                            Path="Codename" />
                    </MultiBinding>
                </Button.IsVisible>
            </Button>

            <Button
                Margin="8,4"
                Command="{Binding GenerateCommand}"
                Text="Generate">
                <Button.IsEnabled>
                    <MultiBinding Converter="{StaticResource AllTrueConverter}">
                        <Binding
                            Mode="OneWay"
                            Path="CodenameForm.IsFormFilled" />
                        <Binding
                            Mode="OneWay"
                            Path="CodenameForm.IsInvalidated" />
                    </MultiBinding>
                </Button.IsEnabled>
                <Button.IsVisible>
                    <MultiBinding Converter="{StaticResource AllTrueConverter}">
                        <Binding
                            Mode="OneWay"
                            Path="CodenameForm.IsFormFilled" />
                        <Binding
                            Mode="OneWay"
                            Path="CodenameForm.IsInvalidated" />
                    </MultiBinding>
                </Button.IsVisible>
            </Button>

            <controls1:ExtendedTextEdit
                x:Name="Codename"
                Margin="8,4"
                AllowAnimation="True"
                FocusedBorderColor="{StaticResource FocusedColor}"
                FocusedLabelColor="{StaticResource FocusedColor}"
                HelpText="Tap to copy"
                IsLabelFloating="True"
                IsReadOnly="True"
                LabelText="Generated codename"
                Tap="OnTapCopy"
                NumberOfTapsRequired="1"
                Text="{Binding Codename, Mode=TwoWay}"
                FontSize="15">
                <controls1:ExtendedTextEdit.IsEnabled>
                    <MultiBinding Converter="{StaticResource AllTrueConverter}">
                        <Binding
                            Mode="OneWay"
                            Path="CodenameForm.IsFormFilled" />
                        <Binding
                            Converter="{StaticResource InvertedBoolConverter}"
                            Mode="OneWay"
                            Path="CodenameForm.IsInvalidated" />
                        <Binding
                            Converter="{StaticResource IsNotNullConverter}"
                            Mode="OneWay"
                            Path="Codename" />
                    </MultiBinding>
                </controls1:ExtendedTextEdit.IsEnabled>
            </controls1:ExtendedTextEdit>

        </StackLayout>
    </ScrollView>
</ContentPage>