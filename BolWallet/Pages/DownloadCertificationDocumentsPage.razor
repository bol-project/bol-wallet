@page "/download-certification-documents"
@inject INavigationService navigationService;

@inherits MvvmComponentBase<DownloadCertificationDocumentsViewModel>

<MudThemeProvider />
<MudDialogProvider />

<MudPaper Elevation="3" Class="px-4 py-5 my-2">
    @if (files != null && files.Any())
    {
        <div class="card-container">
            <MudCard Elevation="8" Border="true" Class="p-4 styled-card emphasized-file">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h5">Download All Documents</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudIconButton Icon="@Icons.Material.Rounded.Archive" Color="Color.Primary" OnClick=" async () => await DownloadAllDocuments()" />
                    </CardHeaderActions>
                </MudCardHeader>
            </MudCard>
            <MudCard>
                <MudExpansionPanel Text="Generated Documents">
                    <MudIconButton Icon="@Icons.Material.Outlined.Info" OnClick="ViewModel.OpenGeneratedDocumentsMoreInfo" />
                    @foreach (var file in files.Where(f => f.FileName.EndsWith(".yaml") || f.FileName.EndsWith(".json")))
                    {
                        <MudCard Class="styled-card" style="font-size: 12px;">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">@file.FileName</MudText>
                                </CardHeaderContent>
                                <CardHeaderActions>
                                    <MudIconButton Icon="@Icons.Material.Rounded.Download" Color="Color.Primary" OnClick="async () => await ViewModel.DownloadDocumentCommand.ExecuteAsync(file)" />
                                </CardHeaderActions>
                            </MudCardHeader>
                        </MudCard>
                    }
                </MudExpansionPanel>
            </MudCard>
            <MudCard>
                <MudExpansionPanel Text="Uploaded Documents">
                    <MudIconButton Icon="@Icons.Material.Outlined.Info" OnClick="ViewModel.OpenGeneratedDocumentsMoreInfo" />
                    @foreach (var file in files.Where(f => !f.FileName.EndsWith(".yaml")))
                    {
                        <MudCard Class="styled-card" style="font-size: 12px;">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">@file.FileName</MudText>
                                </CardHeaderContent>
                                <CardHeaderActions>
                                    <MudIconButton Icon="@Icons.Material.Rounded.Download" Color="Color.Primary" OnClick="async () => await ViewModel.DownloadDocumentCommand.ExecuteAsync(file)" />
                                </CardHeaderActions>
                            </MudCardHeader>
                        </MudCard>
                    }
                </MudExpansionPanel>
            </MudCard>
        </div>
    }
    else
    {
        <MudText Typo="Typo.body1" Class="text-white">No documents available.</MudText>
    }
    <MudItem Class="bottom-button" xs="12">
        <MudButton ButtonType="MudBlazor.ButtonType.Submit" OnClick="()=>navigationService.NavigateTo<MainWithAccountViewModel>()"
                   Variant="MudBlazor.Variant.Filled" Color="Color.Primary" Size="Size.Large" Icon="@Icons.Material.Filled.ArrowForwardIos"
                   Style="background: linear-gradient(to right, #673ab7, #512da8); color: white; padding: 15px 30px; font-size: 14px;">
            Next
        </MudButton>
    </MudItem>
</MudPaper>
<style>
    .card-container .mud-card {
        border-radius: 15px;
        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
        transition: 0.3s;
        background-color: #f8f9fa;
        margin: 10px;
    }

    .emphasized-file {
        background: #d8bfd8;
        border: 2px solid #a0522d;
    }

    .bottom-button {
        margin-top: 100%;
        width: 100%;
        text-align: center;
    }
</style>

@code {
    List<FileItem> files;

    protected override async Task OnInitializedAsync()
    {
        await ViewModel.OnInitializeAsync();
        files = ViewModel.Files;
    }

    private async Task DownloadAllDocuments()
    {
        await ViewModel.DownloadAllDocumentsCommand.ExecuteAsync(files);
    }
}
