@page "/generate-wallet-with-password-page"
@using System.ComponentModel.DataAnnotations;

@inherits MvvmComponentBase<GenerateWalletWithPasswordViewModel>
@inject Breadcrumbs breadcrumbs
@inject NavigationManager nav;

<MudOverlay @bind-Visible="isVisible" DarkBackground="true">
    <MudProgressCircular Color="Color.Primary" Style="height:170px;width:170px;" Indeterminate="true" />
</MudOverlay>
<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="7" style="margin-left: auto; margin-right: auto; margin-top: 10px;">
            <MudCard>
                <MudCardContent>

                    <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                                    @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password" />
                    <MudTextField Label="Password" HelperText="Repeat the password" Class="mt-3"
                                    @bind-Value="model.Password2" For="@(() => model.Password2)" InputType="InputType.Password" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="MudBlazor.ButtonType.Submit"
                                Variant="MudBlazor.Variant.Filled" Color="Color.Primary" Class="ml-auto">Register</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    GenerateWalletWithPasswordViewModel generateWalletWithPasswordViewModel;
    RegisterAccountForm model = new RegisterAccountForm();
    private bool isVisible = false;
    public class RegisterAccountForm
    {

        [Required]
        [StringLength(30, ErrorMessage = "Password must be at least 8 characters long.", MinimumLength = 8)]
        public string Password { get; set; }

        [Required]
        [Compare(nameof(Password))]
        public string Password2 { get; set; }

    }

    protected override async Task OnInitializedAsync()
    {
        generateWalletWithPasswordViewModel = ViewModel;
        breadcrumbs._items = new List<BreadcrumbItem>
        {
        new BreadcrumbItem("Home", href: "/", disabled: false),
        new BreadcrumbItem("Create your Codename", href: "/create-codename-page", disabled: false),
        new BreadcrumbItem("Create your EDI", href: "/create-edi-page", disabled: false),
        new BreadcrumbItem("Create your Password", href: null, disabled: true),
        };
        breadcrumbs.Update();
    }

    private async void OnValidSubmit(EditContext context)
    {
        isVisible = true;
        StateHasChanged();
        generateWalletWithPasswordViewModel.Password = model.Password;
        await generateWalletWithPasswordViewModel.SubmitCommand.ExecuteAsync(null);
        breadcrumbs.userData = generateWalletWithPasswordViewModel.userData;
        breadcrumbs.userData.WalletPassword = model.Password;
        if (breadcrumbs.userData?.BolWallet == null)
            nav.NavigateTo("/");
        else
        {
            nav.NavigateTo("/index-with-account");
            breadcrumbs.Update();
        }
        isVisible = false;
        StateHasChanged();
    }
}
