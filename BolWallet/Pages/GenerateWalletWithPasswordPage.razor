@page "/generate-wallet-with-password"

@inherits MvvmComponentBase<GenerateWalletWithPasswordViewModel>
@inject INavigationService NavigationService

<MudThemeProvider/>

<MudOverlay Visible="ViewModel.IsLoading" DarkBackground="true">
    <MudStack AlignItems="AlignItems.Center">
        <MudProgressCircular Color="Color.Primary" Indeterminate="true"/>
        <MudText>@ViewModel.WalletCreationProgress</MudText>
    </MudStack>
</MudOverlay>

<EditForm Model="@passwordForm" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator/>
    <MudGrid>
        <MudItem xs="12" sm="7" style="margin-left: auto; margin-right: auto; margin-top: 10px;">
            <MudCard>
                <MudCardContent>

                    <MudTextField Immediate="true" Label="Password" HelperText="Choose a strong password" Class="mt-3"
                                  @bind-Value="passwordForm.Password" For="@(() => passwordForm.Password)" InputType="InputType.Password"/>
                    <MudTextField Immediate="true" Label="Password Confirmation" HelperText="Repeat the password" Class="mt-3"
                                  @bind-Value="passwordForm.Password2" For="@(() => passwordForm.Password2)" InputType="InputType.Password"/>
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="MudBlazor.ButtonType.Submit"
                               Variant="MudBlazor.Variant.Filled" Color="Color.Primary" Class="ml-auto">
                        Create Your Wallet
                    </MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    PasswordForm passwordForm = new PasswordForm();

    private async Task OnValidSubmit(EditContext context)
    {
        await InvokeAsync(() => StateHasChanged());

        ViewModel.Password = passwordForm.Password;
        await ViewModel.SubmitCommand.ExecuteAsync(null);

        await InvokeAsync(() => StateHasChanged());

        await NavigationService.NavigateTo<MainWithAccountViewModel>(true);
    }
}