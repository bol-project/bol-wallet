@page "/send-bol-page"

@inject Breadcrumbs breadcrumbs
@inject NavigationManager nav;
@inject UserViewModel userViewModel
@inject SendBolViewModel sendBolViewMode

<h4>@sendBolViewMode.SendBolLabel</h4>
<MudGrid>
    <MudItem xs="12" sm="6">
        <MudPaper Class="pa-2">
            <MudText Color="@Color.Default">@sendBolViewMode.SendBolLabel</MudText>
            <br />
            <MudSelect Margin="Margin.Dense" @bind-Value="@sendBolViewMode.SelectedCommercialAddressIndex"
                       T="int" Label="From Commercial Address" AnchorOrigin="Origin.BottomCenter" Dense="true">
                @{
                    foreach (var bal in sendBolViewMode.CommercialBalancesDisplayList)
                    {
                        <MudSelectItem Value="@(bal)" />
                    }
                }

            </MudSelect>
            <br />
            <MudTextField @bind-Value="@sendBolViewMode.SendBolForm.ReceiverAddress" Label="@sendBolViewMode.ReceiverAddressText" Variant="MudBlazor.Variant.Outlined"></MudTextField>
            <br />
            <MudTextField @bind-Value="@sendBolViewMode.SendBolForm.ReceiverCodename" Label="@sendBolViewMode.ReceiverCodenameText" Variant="MudBlazor.Variant.Outlined"></MudTextField>
            <br />
            <MudTextField @bind-Value="@sendBolViewMode.SendBolForm.Amount"  Label="Amount" Variant="MudBlazor.Variant.Outlined" />
            <br />
            <MudText Color="@Color.Default">Actual Amount: @sendBolViewMode.SendBolForm.ActualAmount</MudText>

            <br />
            <MudButton Variant="MudBlazor.Variant.Filled" Color="Color.Primary"
                       OnClick="@(async z=> await sendBolViewMode.SendBol())">Send</MudButton>
            
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    protected override async Task OnInitializedAsync()
    {
        await sendBolViewMode.Initialize();
        breadcrumbs._items = new List<BreadcrumbItem>
        {
            new BreadcrumbItem("Home", href: "/index-with-account", disabled: false),
            new BreadcrumbItem("Transfer", href: null, disabled: true),
        };

        breadcrumbs.userData = userViewModel._userData;
        breadcrumbs.Update();

    }
}
